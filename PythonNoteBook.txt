06/08/2020
----------

#

I/P:
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import numpy as np

iris = pd.read_csv("iris.csv")
print(iris.shape)

O/P:
(150, 5)

===================================================

05/08/2020
----------

# Compare two list and publish common numbers:

I/P:
import random

l1 = list(range(5))
random.shuffle(l1)


l2 = list(range(10))
random.shuffle(l2)

count = 0
for i in l1:
    for j in l2:
        if i == j:
           print(i)
           count +=1
print("Common numbers are as following: ", count)


O/P:
0
4
3
1
2
Common numbers are as following:  5

=================================================

04/08/20
--------

# 

I/P:
import pandas as pd
df = pd.read_csv("weather2.csv")
df.head()


O/P:
Print first few top rows. 
--------------------


I/P:
import pandas as pd
df = pd.read_csv("weather2.csv")
df.head()
df.tail()
df[2:4]


O/P:
Print second and third row.


---------------------

I/P:
import pandas as pd
df = pd.read_csv("weather2.csv")
df.columns


O/P:
Index(['outlook', 'temperature', 'humidity', 'windy', 'play'], dtype='object')
#Shows the columns of the csv file.

----------------------

I/P:
import pandas as pd
df = pd.read_csv("weather2.csv")
df.info()

O/P:
# It shows the index & data types 


-----------------------


I/P:
import pandas as pd
df = pd.read_excel("weather_data_Excel.xlsx")
df


O/P:
This opens the excel file.

--------------------------

I/P:




O/P:


=================================

03/08/20
--------


# Pandas Examples:

I/P:
import pandas as pd
df = pd.read_csv("NY_weather.csv")
print(df)
df["DewPoint"].max(), "DewPoint Maxvalue."
print(df['EST'][df['Events'] == "Rain"])
print(df['WindSpeedMPH'].mean())

O/P:
Data displayed with dewpoint max value, rain days and mean windspeed.
---------------------

I/P:


O/P:

--------------------
====================================

01/08/2020
----------

# Matplotlib Examples:
----------------------

I/P:
import matplotlib.pyplot as plt
plt.plot([1,2],[3,4])
plt.ylabel("Numbers")
plt.xlabel("Indices")
plt.title("Kapil Plot")
plt.grid()
plt.show()

O/P:
Plot created.

-------------------------

I/P:
import numpy as np
import matplotlib.pyplot as plt
k = np.arange(0,9,0.2)

plt.plot(k,k**2, "r^" , label="^2")
plt.plot(k,k**4, "gs", label="^4")

plt.grid()
plt.title("Kapil Plot")
plt.legend()
plt.show()


O/P:
Plot created with legends


--------------------------

I/P:
import matplotlib.pyplot as plt

x = [1,2,3,4]
y = [2,4,6,8]

plt.plot(x,y,linewidth = 5.0)
lines = plt.plot(x,y)

plt.plot("r^",label="2^")
plt.plot("g^",label="2^^")

plt.title("Kapil Plot")
plt.ylabel("Numbers")
plt.xlabel("Indices")

plt.legend()
plt.grid()
plt.show()

O/P:
Plot with legend, bold width.

---------------------------

I/P:
import numpy as np
import matplotlib.pyplot as plt

k1 = np.arange(0.0, 5.0, 0.1)
k2 = np.arange(0.0, 5.0, 0.02)

plt.figure(1)
plt.subplot(211)
plt.grid()
plt.plot(k1,"b--")
plt.title("Kapil Plot 211")
plt.tight_layout(pad=3.0)

plt.subplot(212)
plt.grid()
plt.plot(k1,"r--")
plt.title("Kapil Plot 212")
plt.tight_layout(pad=3.0)

plt.figure(2)
plt.grid()
plt.plot(k2,"g^")
plt.title("Kapil Plot 2")


O/P:
Multi Plot with spacing.
-----------------------------


I/P:




O/P:


==============================================

31/07/2020
----------

# Numpy Examples:
---------------- 

I/P:
import numpy as np
k = np.array([1,2,3,4])
k + 2

O/P:
array([3, 4, 5, 6])


-----------------------------------

I/P:
import numpy as np
k = np.array([1,2,3,4])
k ** 2

O/P: 
array([ 1,  4,  9, 16])

-------------------------------------

I/P:

import numpy as np
k = np.array([1,2,3,4])
m = np.array([4,5,6,7])
k == m

O/P:
array([False, False, False, False])

-----------------------------------------

I/P:


O/P:



========================================


29/07/2020
----------

# 

I/P:
import numpy as np
k = np.array([0,1,2,3,4])
print(k)

print(np.arange(9))


O/P:
[0 1 2 3 4]
[0 1 2 3 4 5 6 7 8]


-----------------------------------

I/P:



O/P:



===========================================================

28/07/2020
----------

# File Opening 

I/P: 
f = open('OpenTestFile.txt','w')
f.write("Test text, is a good start of the test!")
f = open("OpenTestFile.txt","r")
print(f.read(15))
print(f.tell())
print(f.readline())

O/P: 
Test text, is a
15
good start of the test!

------------------------------


==================================================

27/07/2020
----------

Python Modules:

I/P: 
import math
print(math.pi)

O/P: 
3.141592653589793

-----------------------------------------------

I/P:
import datetime

print(datetime.datetime.now())

O/P:
2020-07-27 16:32:22.514602

================================================

26/07/2020
----------

Function 3 Examples: 

I/P:
def message_function(name, message="how are you!"):
  
    print("Hi {0}, {1}".format(name, message)) 

message_function("Kapil")


O/P: 
Hi Kapil, how are you!

-----------------------------------------------------

I/P:
def message_function(**kwargs):
  if (kwargs):
      print("Hi {0}, {1}".format(kwargs['name'], kwargs['msg'])) 
message_function(name="Kapil", msg="how are you!")


O/P:
Hi Kapil, how are you!

--------------------------------------------------

I/P:

def fact(num):

	   return 1 if num == 1 else (num * fact(num-1))

num = 8
print ("Factorial of {0} is {1}".format(num, fact(num)))

O/P:
Factorial of 8 is 40320.

=====================================================


25/07/2020
----------

Functions Examples 2:

I/P:
num = -2000

print(abs(-2000))

O/P:
2000

------------------------------

I/P:
num  = [1,2,3,4]

print(all(num))

O/P:
True

------------------------------

I/P: 
print(divmod(10,19))

O/P: 
(0, 10)

----------------------------------

I/P: 
ages_group = [1,2,3,4,5,10,12,14,16,18,20,24,28]

def myFunc(x):
  if x > 18:
    return False
  else:
    return True

adults = filter(myFunc, ages_group)

for x in adults:
  print(x,"- these are adults in the age data")


O/P: 
1 - these are adults in the age data
2 - these are adults in the age data
3 - these are adults in the age data
4 - these are adults in the age data
5 - these are adults in the age data
10 - these are adults in the age data
12 - these are adults in the age data
14 - these are adults in the age data
16 - these are adults in the age data
18 - these are adults in the age data

----------------------------------

I/P: 
lst = [2,4,6,8]

def square_function(x):
	return(x **2)

numbers = list(map(square_function, lst))
print(numbers)

O/P: 
[4, 16, 36, 64]

----------------------------------

I/P: 
lst = [2,4,6,8]

def reduce_function(x):
	return(x **2)

numbers = list(reduce(reduce_function, lst))
print(numbers)


O/P: 
24

----------------------------------

I/P: 
from functools import reduce
lst = [1,2,3,4]
def reduce_function(x,y):
	return(x*y)

numbers = reduce(reduce_function, lst)
print(numbers)

O/P: 
24


===========================================================



24/07/2020
----------

Functions Examples:


I/P: 
def profile_function(x):
	return(x)
profile_function('Kapil')


O/P:
'Kapil'

===========================================================


23/07/2020
----------

Strings Examples: 

I/P:
K = "Kapil"
print(K)
print(K[1:3])
print(K[1:-3])

O/P: 
Kapil
ap
a

-------------------------------------

I/P:
count = 0
for l in "Who are you my dear one!":
	if l == 'y':
	  count += 1
print(count, 'No. of letters found!') 


O/P: 
2 No. of letters found!

----------------------------------------

I/P: 
"This is my place!".find("my")

O/P: 
8

-----------------------------------------

I/P:
New1 = "I am Rahul!"
New2 = New1.replace("Rahul", "Kapil")

O/P:
I am Rahul!
I am Kapil!

------------------------------------------

I/P:
myString = "This is a good excerise to do and learn new things!"
print(myString)
line = myString.split()
line.sort()
print(line)
for line in line:
  print(line)

O/P: 
This is a good excerise to do and learn new things!
['This', 'a', 'and', 'do', 'excerise', 'good', 'is', 'learn', 'new', 'things!', 'to']
This
a
and
do
excerise
good
is
learn
new
things!
to

=============================================================
AI 3.6

22/07/2020
----------

Dictionary Examples:-

I/P:
Idic = {'name':'Kapil', 'age' : 100, 'Search':'Running'}
print(Idic)


O/P: 
{'name': 'Kapil', 'age': 100, 'Search': 'Running'}

----------------------------

I/P:
Idic = {'name':'Kapil', 'age' : 100, 'Search':'Running'}
print(Idic.get('name'))


O/P: 
Kapil

----------------------------

I/P:
Idic = {'name':'Kapil', 'age' : 100, 'Search':'Running'}
Idic['name'] = 'ram'
print(Idic)

O/P: 
{'name': 'ram', 'age': 100, 'Search': 'Running'}

-----------------------------------------------

I/P:
Idic = {'name':'Kapil', 'age' : 100, 'Search':'Running'}
Idic['name'] = 'ram'
print(Idic)
Idic['education'] = 'P.G'
print(Idic)
print(Idic.pop('education'))
print(Idic)
del Idic['Search']
print(Idic)
print(Idic.keys())
print(Idic)
print(Idic.values())
print(Idic)
k = {}
print(dir(k))



O/P: 
{'name': 'ram', 'age': 100, 'Search': 'Running'}
{'name': 'ram', 'age': 100, 'Search': 'Running', 'education': 'P.G'}
P.G
{'name': 'ram', 'age': 100, 'Search': 'Running'}
{'name': 'ram', 'age': 100}
dict_keys(['name', 'age'])
{'name': 'ram', 'age': 100}
dict_values(['ram', 100])
{'name': 'ram', 'age': 100}
['__class__', '__contains__', '__delattr__', '__delitem__', 
'__dir__', '__doc__', '__eq__', '__format__', '__ge__', 
'__getattribute__', '__getitem__', '__gt__', '__hash__', 
'__init__', '__init_subclass__', '__iter__', '__le__', '__len__', 
'__lt__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', 
'__repr__', '__setattr__', '__setitem__', '__sizeof__', '__str__', 
'__subclasshook__', 'clear', 'copy', 'fromkeys', 'get', 'items', 
'keys', 'pop', 'popitem', 'setdefault', 'update', 'values']

-------------------------------------------------


====================================================================================
AI - 3.5


21/07/2020
----------

Sets Examples:-

I/P:
S1 = {1,1,2,3,}
print(S1)
print(type(S1))
S2 = set([1,2,3,4,1])
print(S2)


O/P:
{1, 2, 3}
<class 'set'>
{1, 2, 3, 4}

---------------------------------------------------------

# To union in set:

I/P:
S1 = {1,1,2,3,}
S2 = {1,2,3,4,5,6,7,8,9}
print(S1 | S2)

O/P:
{1, 2, 3, 4, 5, 6, 7, 8, 9}

----------------------------------------------------------

I/P:
S1 = {1,1,2,3,}
S2 = {1,2,3,4,5,6,7,8,9}
print(S1 & S2)


O/P:
{1, 2, 3}

====================================================================================
AI - 3.4


20/07/2020
----------

Tuples Examples:-

# To find the type:

I/P:
t = (1,(1,2,3),[1,2,3, 4,5],)
print(t)
print(type(t))


O/P:
(1, (1, 2, 3), [1, 2, 3, 4, 5])
<class 'tuple'>)

------------------------------------
# Adding two tuples:

I/P:
t = (1,2) + (3,4)
print(t)
print(type(t))


O/P:
(1, (1, 2, 3), [1, 2, 3, 4, 5])
<class 'tuple'>)

--------------------------------------

# Repeat the elements:

I/P:
t = (("Kapil",)*4)
print(t)
print(type(t))


O/P:
('Kapil', 'Kapil', 'Kapil', 'Kapil')
<class 'tuple'>

----------------------------------------

# Boolean O/P:

I/P:
t = (1,2,3,4)
print(1 in t)
print("K" in t)
print(type(t))


O/P:
True
False
<class 'tuple'>

-----------------------------------------



====================================================================================

19/07/2020
----------

Control and Break Flow Examples:-

I/P:
lst = [1,2,3,4]

for num in lst:
  if num == 4:
    break
  else:
    print("Loop is ruuning -", num)
print("The count completed master!")

O/P:
Loop is ruuning - 1
Loop is ruuning - 2
Loop is ruuning - 3
The count completed master!

----------------------------------------------------

#Insert item at desired location in a list.

I/P:  
lst = [1,2,3,5]
print(lst)
lst.insert(3,4)
print(lst)

O/P:
[1, 2, 3, 5]
[1, 2, 3, 4, 5]

-----------------------------------------------------

I/P:
num = int(input("Please enter the number:"))

isDivisible = False

i = 2
while i < num:
    if num % i == 0:
        isDivisible = True
        print("{} is divisible by {}".format(num,i))
        break
    i +=1
if isDivisible:
    print("{} is NOT a prime number".format(num))
else:
   print("{} is a prime number".format(num))

O/P:
Please enter the number:19
19 is a prime number

------------------------------------------------------
I/P:
numbers = [1,2,3,4,5]

for num in numbers:
  if num % 2 == 0:
      print(num, "- is even number.")
      continue
  print(num, "- is odd number.")
else:
  print("\n")
  print("For loop exited.")

O/P:
1 - is odd number.
2 - is even number.
3 - is odd number.
4 - is even number.
5 - is odd number.


For loop exited.

-----------------------------------------------------

I/P:
index1 = int(input("Please enter the starting range number: "))
index2 = int(input("Please enter the ending range number: "))

print("\n")

print("Prime number between {} and {} are:".format(index1, index2))

for num in range(index1,index2):
    if (num > 1): 
        isDivisible = False
        for index in range(1, num):
            if (num % index == 0) or (num % 2 == 0):
                print("\n")
                print(num, "- is even number.")
                print("\n")
                isDivisible = True
                print(num,"The number is not prime.")
                break
        if not isDivisible:
            print("\n")
            print(num, "is a prime number.")
            print("\n")

O/P:
Please enter the starting range number: 1
Please enter the ending range number: 5


Prime number between 1 and 5 are:


2 - is even number.


2 The number is not prime.


3 - is even number.


3 The number is not prime.


4 - is even number.


4 The number is not prime.

--------------------------------------

List Example:-

String Split:

I/P:
s1 = "Hi,how,are,you!"
print(s1)
s2 = "This is free CBT."
print(s1)
print()
spt1 = s1.split(",")
print(spt1)
spt2 = s2.split()
print(spt2)

O/P:
Hi,how,are,you!
Hi,how,are,you!

['Hi', 'how', 'are', 'you!']
['This', 'is', 'free', 'CBT.']

----------------------------------------------

I/P:
matrix = [[1,2,3,4],[5,6,7,8],[9,10,11,12]]
transposed = [[row[i] for row in matrix] for i in range(4)]
print(transposed)

O/P:
[[1, 5, 9], [2, 6, 10], [3, 7, 11], [4, 8, 12]]

====================================================================================


18/07/2020
----------

While Loop Examples:-

Alist = [1,2,3,4,5]

Box = 1
Count = 0

while Count < len(Alist):
  Box *= Alist[Count]
  Count += 1
  print("The final value of Box is {}".format(Box))
  print("\n")
else:
  print("No, items left in the list now.")

O/P:
The final value of Box is 1
The final value of Box is 2
The final value of Box is 6
The final value of Box is 24
The final value of Box is 120
No, items left in the list now.

---------------------------------------------------

I/P:

num1 = int(input("Please enter the number:"))

ifDivide = False

i  = 1
while i < num1:
  if num1 % i == 0:
    ifDivide = True
    print ("{} is divisible by {}".format(num1,i))
  i +=1

if ifDivide:
  print("{} is NOT a Prime number ".format(num1))
else:
  print("{} is a Prime number".format(num1))


O/P:
Please enter the number:16
16 is divisible by 1
16 is divisible by 2
16 is divisible by 4
16 is divisible by 8
16 is NOT a Prime number 

-------------------------------------------------------

I/P:
Alist = [1,2,3,4,5]

Box = 1
for itm in Alist:
    Box *= itm

    print("The final value of Box is {}".format(Box))
    print("\n")
else:
  print("No, items left in the list now.")


O/P:
The final value of Box is 1
The final value of Box is 2
The final value of Box is 6
The final value of Box is 24
The final value of Box is 120
No, items left in the list now.

-----------------------------------------------------

I/P:
lst = ["Kapil","Apil","Triple","Arpil"]

#for index in range(len(lst)):
#  print(lst[index])

for ele in lst:
  print(ele)

O/P:
Kapil
Apil
Triple
Arpil

--------------------------------------------------------

I/P:
lst = [1,2,3,4,5]

for ele in lst:
	print(ele)
else:
	print("Items in the list now completed.)

O/P:
1
2
3
4
5
Items in the list now completed.

---------------------------------------------

index1 = int(input("Please enter the starting range number: "))
index2 = int(input("Please enter the ending range number: "))

print("\n")

print("Prime number between {} and {} are:".format(index1, index2))

print("\n")
for num in range(index1,index2):
    if (num > 1): 
        isDivisible = False
        for index in range(2, num):
            if (num % index == 0):
                isDivisible = True
                print(num,"The number is not prime.")
        if not isDivisible:
            print("\n")
            print(num, "is a prime number.")
            print("\n")

====================================================================================

17/07/2020
----------

Operators Examples:-

Floor Division(//):
I/P:
a = 15
b = 7

c = a//b

print("The {x} of the {y} division is {c1}".format(c1 = c,x="value",y="floor"))

O/P:
The value of the floor division is 2

-------------------------------------------------------------

If-else example:

Uv =  11
if Uv <= 10:
	print("The value is less than ten!")
else:
	print("The value greator than ten!")


--------------------------------------------------------------

elif example:

Uv =  12
if Uv <= 10:
	print("The value is less than ten!")
elif Uv == 12:
	print("The value matched.")
else:
	print("The value greator than ten!")

----------------------------------------------------

num1 = 15
num2 = 14
num3 = 11

if (num1 >= num2) and (num1 >= num3):
	  largest = num1
elif (num2 >= num1) and (num2 >= num3):
	  largest = num2
else:
          largest = num3
print("The high value is {}".format(largest))

====================================================================================


16/07/2020
----------

Formatting Examples:-

I/P:
a = "Kapil"
b = "example"
print("Hello, {} this is a simple {}.".format(a,b))

O/P:
Hello, Kapil this is a simple example.

-----------------------------------------------------
I/P:
print("Hello, {a} this is a simple {b}.".format(a="Kapil",b="example"))

O/P:
Hello, Kapil this is a simple example.

------------------------------------------------------

I/P:
a = "Kapil"
b = "example"
print("Hello, {0} this is a simple {1}.".format(a,b))

O/P:
Hello, Kapil this is a simple example.
------------------------------------------------------
I/P:
lst = ["Kapi", "Apil", "Tapil", "Japil", "Hapil"]

for elm in lst:
  print("The word length of {} is".format(elm),"-",len(elm))

O/P:
The word length of Kapi is - 4
The word length of Apil is - 4
The word length of Tapil is - 5
The word length of Japil is - 5
The word length of Hapil is - 5

------------------------------------------------------

I/P:
a = "Kapil"
b = "example"
print("Hello, {0} this is a simple {1} for this {extra}.".format(a,b, extra = "sentence"))

O/P:
Hello, Kapil this is a simple example for this sentence.

------------------------------------------------------






